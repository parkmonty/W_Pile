1. 기본 자료형과 변수
  
  1) 기본 자료형 (숫자, 문자, 참거짓) -> type 함수 (자료형 반환)
    - 정수 (int)
    - 실수 (float)
    
    # 사직연산
      : + (더하기), / (나누기), - (빼기), * (곱하기), // (몫), % (나머지), ** (제곱)
    
    - 문자 (str) : "" 또는 ''로 처음과 끝을 표시해 사용
    
    # 문자의 인덱싱, 슬라이싱
      : [시작:끝:단위] 형태로 사용

    - 참 & 거짓 (bool : True, false)

    # 비교 연산
      : == (같다), != (다르다), >= (크거나 같다, 작거나 같다), > (크다, 작다)

    # 논리 연산
      : and, or, not

  2) 변수
    - 데이터를 담는 공간
    - 자료형을 저장할 수 있음

    # 선언방법
      : 변수명 = 데이터

2. 컨테이너 자료형 (list, dict)
  - 컨테이너 자료형은 컨테이너 박스처럼 많은 잘료형을 담을 수 있는 공간
  - CRUD (create read update delete)

  1) list
    # 선언 (create)
      : [자료1, 자료2]

    # 인덱싱과 슬라이싱
      : [시작:끝:단위]

    # 수정 (update)
      : names = ['jenny', 'james', 'john'] -> name[0] = 'tom' -> names = ['tom', 'james', 'john']

    # 삭제 (delete)
      : remove (특정 문자 제거), del (특정 인덱스 제거)

  2) dict
    - 인덱스가 없는 자료 (hash형 자료라고 함)

    # 선언 (create)
      : {key : val, key : val}

    # 조회 (read)
      : name[key] -> val

    # 수정 (update)
      : name[key1] -> val1 -> name[key1] = val2 -> name[key1] -> val2

    # 삭제 (delete)
      : del (key를 이용해 제거), pop(key, None) -> 에러 대신 None을 리턴

3. 조건문
  - 조건에 따라 다르게 실행 해야하는 경우 사용
  - 조건문의 조건에는 다양한 지교연산, 논리연산 들어갈 수 있음

  1) 사용법
    if 조건:
        조건이 참일 때 실행 코드
    elif 조건:
        조건이 참일 때 실행 코드
    else:
        뒤 조건이 모두 거짓일 때 실행할 코드

  2) 기본 자료형에도 참, 거짓이 있음
    - False로 간주 되는 값
      * None
      * 0
      * "" 빈 문자열
      * [] 빈 리스트
      * {} 빈 딕셔너

4. 반복문
  - 프로그래밍에서는 불필요한 반복을 줄이는 것이 핵심

  1) 파이썬 반복문의 종류
    - while
    - for

  2) while 반복
    - 증감조건 X -> 무한반
    - 필요에 따라 사용하되, while을 사용할 땐 언제 반복을 종료할지 잘 정의할 것

    # 사용법
      : 초기값
      while 반복조건
        반복할 코드
        증감

  3) for 반복
    # 사용법
      : for 반복변수 in 반복대상:
        반복할 코드

  4) 반복문 제어
    - break : 반복 종료
    - continue : 건너뛰











